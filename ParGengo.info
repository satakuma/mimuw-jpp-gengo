-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParGengo.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type Block   (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	ArgType -> Type                                    (8)
	ArgType -> Type '&'                                (9)
	ListArgType ->                                     (10)
	ListArgType -> ArgType                             (11)
	ListArgType -> ArgType ',' ListArgType             (12)
	Arg -> ArgType Ident                               (13)
	ListArg ->                                         (14)
	ListArg -> Arg                                     (15)
	ListArg -> Arg ',' ListArg                         (16)
	Block -> '{' ListStmt '}'                          (17)
	ListStmt ->                                        (18)
	ListStmt -> Stmt ListStmt                          (19)
	Stmt -> ';'                                        (20)
	Stmt -> Block                                      (21)
	Stmt -> Type Ident '=' Expr ';'                    (22)
	Stmt -> Ident '=' Expr ';'                         (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'break' ';'                                (25)
	Stmt -> 'continue' ';'                             (26)
	Stmt -> If                                         (27)
	Stmt -> 'while' '(' Expr ')' Block                 (28)
	Stmt -> Expr ';'                                   (29)
	Stmt -> TopDef                                     (30)
	If -> 'if' '(' Expr ')' Block                      (31)
	If -> 'if' '(' Expr ')' Block 'else' Else          (32)
	Else -> Block                                      (33)
	Else -> If                                         (34)
	Type -> 'int'                                      (35)
	Type -> 'string'                                   (36)
	Type -> 'bool'                                     (37)
	Type -> Type '(' ListArgType ')'                   (38)
	Expr6 -> Ident                                     (39)
	Expr6 -> Integer                                   (40)
	Expr6 -> 'true'                                    (41)
	Expr6 -> 'false'                                   (42)
	Expr6 -> Ident '(' ListExpr ')'                    (43)
	Expr6 -> String                                    (44)
	Expr6 -> '(' Expr ')'                              (45)
	Expr5 -> '-' Expr6                                 (46)
	Expr5 -> '!' Expr6                                 (47)
	Expr5 -> Expr6                                     (48)
	Expr4 -> Expr4 MulOp Expr5                         (49)
	Expr4 -> Expr5                                     (50)
	Expr3 -> Expr3 AddOp Expr4                         (51)
	Expr3 -> Expr4                                     (52)
	Expr2 -> Expr2 RelOp Expr3                         (53)
	Expr2 -> Expr3                                     (54)
	Expr1 -> Expr2 '&&' Expr1                          (55)
	Expr1 -> Expr2                                     (56)
	Expr -> Expr1 '||' Expr                            (57)
	Expr -> '(' ListArg ')' '=>' Type Block            (58)
	Expr -> Expr1                                      (59)
	ListExpr ->                                        (60)
	ListExpr -> Expr                                   (61)
	ListExpr -> Expr ',' ListExpr                      (62)
	AddOp -> '+'                                       (63)
	AddOp -> '-'                                       (64)
	MulOp -> '*'                                       (65)
	MulOp -> '/'                                       (66)
	MulOp -> '%'                                       (67)
	RelOp -> '<'                                       (68)
	RelOp -> '<='                                      (69)
	RelOp -> '>'                                       (70)
	RelOp -> '>='                                      (71)
	RelOp -> '=='                                      (72)
	RelOp -> '!='                                      (73)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'=>'           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'break'        { PT _ (TS _ 23) }
	'continue'     { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'fn'           { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'return'       { PT _ (TS _ 30) }
	'string'       { PT _ (TS _ 31) }
	'true'         { PT _ (TS _ 32) }
	'while'        { PT _ (TS _ 33) }
	'{'            { PT _ (TS _ 34) }
	'||'           { PT _ (TS _ 35) }
	'}'            { PT _ (TS _ 36) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	ArgType         rules 8, 9
	ListArgType     rules 10, 11, 12
	Arg             rule  13
	ListArg         rules 14, 15, 16
	Block           rule  17
	ListStmt        rules 18, 19
	Stmt            rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	If              rules 31, 32
	Else            rules 33, 34
	Type            rules 35, 36, 37, 38
	Expr6           rules 39, 40, 41, 42, 43, 44, 45
	Expr5           rules 46, 47, 48
	Expr4           rules 49, 50
	Expr3           rules 51, 52
	Expr2           rules 53, 54
	Expr1           rules 55, 56
	Expr            rules 57, 58, 59
	ListExpr        rules 60, 61, 62
	AddOp           rules 63, 64
	MulOp           rules 65, 66, 67
	RelOp           rules 68, 69, 70, 71, 72, 73

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'fn'           shift, and enter state 6

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'fn'           shift, and enter state 6
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 8

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> 'fn' . Ident '(' ListArg ')' '->' Type Block    (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 7

State 7

	TopDef -> 'fn' Ident . '(' ListArg ')' '->' Type Block    (rule 5)

	'('            shift, and enter state 9


State 8

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 9

	TopDef -> 'fn' Ident '(' . ListArg ')' '->' Type Block    (rule 5)

	')'            reduce using rule 14
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	ArgType        goto state 10
	Arg            goto state 11
	ListArg        goto state 12
	Type           goto state 13

State 10

	Arg -> ArgType . Ident                              (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 11

	ListArg -> Arg .                                    (rule 15)
	ListArg -> Arg . ',' ListArg                        (rule 16)

	')'            reduce using rule 15
	','            shift, and enter state 20


State 12

	TopDef -> 'fn' Ident '(' ListArg . ')' '->' Type Block    (rule 5)

	')'            shift, and enter state 19


State 13

	ArgType -> Type .                                   (rule 8)
	ArgType -> Type . '&'                               (rule 9)
	Type -> Type . '(' ListArgType ')'                  (rule 38)

	'&'            shift, and enter state 17
	'('            shift, and enter state 18
	')'            reduce using rule 8
	','            reduce using rule 8
	L_Ident        reduce using rule 8


State 14

	Type -> 'bool' .                                    (rule 37)

	'&'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	'{'            reduce using rule 37
	L_Ident        reduce using rule 37


State 15

	Type -> 'int' .                                     (rule 35)

	'&'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	','            reduce using rule 35
	'{'            reduce using rule 35
	L_Ident        reduce using rule 35


State 16

	Type -> 'string' .                                  (rule 36)

	'&'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	'{'            reduce using rule 36
	L_Ident        reduce using rule 36


State 17

	ArgType -> Type '&' .                               (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9
	L_Ident        reduce using rule 9


State 18

	Type -> Type '(' . ListArgType ')'                  (rule 38)

	')'            reduce using rule 10
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	ArgType        goto state 24
	ListArgType    goto state 25
	Type           goto state 13

State 19

	TopDef -> 'fn' Ident '(' ListArg ')' . '->' Type Block    (rule 5)

	'->'           shift, and enter state 23


State 20

	ListArg -> Arg ',' . ListArg                        (rule 16)

	')'            reduce using rule 14
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	ArgType        goto state 10
	Arg            goto state 11
	ListArg        goto state 22
	Type           goto state 13

State 21

	Arg -> ArgType Ident .                              (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13


State 22

	ListArg -> Arg ',' ListArg .                        (rule 16)

	')'            reduce using rule 16


State 23

	TopDef -> 'fn' Ident '(' ListArg ')' '->' . Type Block    (rule 5)

	'bool'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	Type           goto state 28

State 24

	ListArgType -> ArgType .                            (rule 11)
	ListArgType -> ArgType . ',' ListArgType            (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 27


State 25

	Type -> Type '(' ListArgType . ')'                  (rule 38)

	')'            shift, and enter state 26


State 26

	Type -> Type '(' ListArgType ')' .                  (rule 38)

	'&'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	'{'            reduce using rule 38
	L_Ident        reduce using rule 38


State 27

	ListArgType -> ArgType ',' . ListArgType            (rule 12)

	')'            reduce using rule 10
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	ArgType        goto state 24
	ListArgType    goto state 31
	Type           goto state 13

State 28

	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type . Block    (rule 5)
	Type -> Type . '(' ListArgType ')'                  (rule 38)

	'('            shift, and enter state 18
	'{'            shift, and enter state 30

	Block          goto state 29

State 29

	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'bool'         reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'fn'           reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 30

	Block -> '{' . ListStmt '}'                         (rule 17)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	';'            shift, and enter state 51
	'bool'         shift, and enter state 14
	'break'        shift, and enter state 52
	'continue'     shift, and enter state 53
	'false'        shift, and enter state 54
	'fn'           shift, and enter state 6
	'if'           shift, and enter state 55
	'int'          shift, and enter state 15
	'return'       shift, and enter state 56
	'string'       shift, and enter state 16
	'true'         shift, and enter state 57
	'while'        shift, and enter state 58
	'{'            shift, and enter state 30
	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	TopDef         goto state 35
	Block          goto state 36
	ListStmt       goto state 37
	Stmt           goto state 38
	If             goto state 39
	Type           goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 47

State 31

	ListArgType -> ArgType ',' ListArgType .            (rule 12)

	')'            reduce using rule 12


State 32

	Stmt -> Ident . '=' Expr ';'                        (rule 23)
	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 43)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 92
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            shift, and enter state 93
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 33

	Expr6 -> Integer .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 34

	Expr6 -> String .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 35

	Stmt -> TopDef .                                    (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'fn'           reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 36

	Stmt -> Block .                                     (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'fn'           reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 37

	Block -> '{' ListStmt . '}'                         (rule 17)

	'}'            shift, and enter state 91


State 38

	ListStmt -> Stmt . ListStmt                         (rule 19)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	';'            shift, and enter state 51
	'bool'         shift, and enter state 14
	'break'        shift, and enter state 52
	'continue'     shift, and enter state 53
	'false'        shift, and enter state 54
	'fn'           shift, and enter state 6
	'if'           shift, and enter state 55
	'int'          shift, and enter state 15
	'return'       shift, and enter state 56
	'string'       shift, and enter state 16
	'true'         shift, and enter state 57
	'while'        shift, and enter state 58
	'{'            shift, and enter state 30
	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	TopDef         goto state 35
	Block          goto state 36
	ListStmt       goto state 90
	Stmt           goto state 38
	If             goto state 39
	Type           goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 47

State 39

	Stmt -> If .                                        (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'fn'           reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 40

	Stmt -> Type . Ident '=' Expr ';'                   (rule 22)
	Type -> Type . '(' ListArgType ')'                  (rule 38)

	'('            shift, and enter state 18
	L_Ident        shift, and enter state 2

	Ident          goto state 89

State 41

	Expr5 -> Expr6 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 42

	Expr4 -> Expr5 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 43

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr4 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 86
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 87
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 88
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 85

State 44

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr3 .                                    (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 83
	','            reduce using rule 54
	'-'            shift, and enter state 84
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 82

State 45

	Expr2 -> Expr2 . RelOp Expr3                        (rule 53)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 55)
	Expr1 -> Expr2 .                                    (rule 56)

	'!='           shift, and enter state 75
	'&&'           shift, and enter state 76
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'<'            shift, and enter state 77
	'<='           shift, and enter state 78
	'=='           shift, and enter state 79
	'>'            shift, and enter state 80
	'>='           shift, and enter state 81
	'||'           reduce using rule 56

	RelOp          goto state 74

State 46

	Expr -> Expr1 . '||' Expr                           (rule 57)
	Expr -> Expr1 .                                     (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           shift, and enter state 73


State 47

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 72


State 48

	Expr5 -> '!' . Expr6                                (rule 47)

	'('            shift, and enter state 68
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 71

State 49

	Expr6 -> '(' . Expr ')'                             (rule 45)
	Expr -> '(' . ListArg ')' '=>' Type Block           (rule 58)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	')'            reduce using rule 14
	'-'            shift, and enter state 50
	'bool'         shift, and enter state 14
	'false'        shift, and enter state 54
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	ArgType        goto state 10
	Arg            goto state 11
	ListArg        goto state 69
	Type           goto state 13
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 70

State 50

	Expr5 -> '-' . Expr6                                (rule 46)

	'('            shift, and enter state 68
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 67

State 51

	Stmt -> ';' .                                       (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'fn'           reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 52

	Stmt -> 'break' . ';'                               (rule 25)

	';'            shift, and enter state 66


State 53

	Stmt -> 'continue' . ';'                            (rule 26)

	';'            shift, and enter state 65


State 54

	Expr6 -> 'false' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 55

	If -> 'if' . '(' Expr ')' Block                     (rule 31)
	If -> 'if' . '(' Expr ')' Block 'else' Else         (rule 32)

	'('            shift, and enter state 64


State 56

	Stmt -> 'return' . Expr ';'                         (rule 24)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 63

State 57

	Expr6 -> 'true' .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 58

	Stmt -> 'while' . '(' Expr ')' Block                (rule 28)

	'('            shift, and enter state 61


State 59

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 60

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 61

	Stmt -> 'while' '(' . Expr ')' Block                (rule 28)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 107

State 62

	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 43)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 92
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 63

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 106


State 64

	If -> 'if' '(' . Expr ')' Block                     (rule 31)
	If -> 'if' '(' . Expr ')' Block 'else' Else         (rule 32)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 105

State 65

	Stmt -> 'continue' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 66

	Stmt -> 'break' ';' .                               (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 67

	Expr5 -> '-' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 68

	Expr6 -> '(' . Expr ')'                             (rule 45)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 70

State 69

	Expr -> '(' ListArg . ')' '=>' Type Block           (rule 58)

	')'            shift, and enter state 104


State 70

	Expr6 -> '(' Expr . ')'                             (rule 45)

	')'            shift, and enter state 103


State 71

	Expr5 -> '!' Expr6 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 72

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'fn'           reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 73

	Expr -> Expr1 '||' . Expr                           (rule 57)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 102

State 74

	Expr2 -> Expr2 RelOp . Expr3                        (rule 53)

	'!'            shift, and enter state 48
	'('            shift, and enter state 68
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 101

State 75

	RelOp -> '!=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 76

	Expr1 -> Expr2 '&&' . Expr1                         (rule 55)

	'!'            shift, and enter state 48
	'('            shift, and enter state 68
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 100

State 77

	RelOp -> '<' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 78

	RelOp -> '<=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 79

	RelOp -> '==' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 80

	RelOp -> '>' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 81

	RelOp -> '>=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 82

	Expr3 -> Expr3 AddOp . Expr4                        (rule 51)

	'!'            shift, and enter state 48
	'('            shift, and enter state 68
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 99

State 83

	AddOp -> '+' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 84

	AddOp -> '-' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 85

	Expr4 -> Expr4 MulOp . Expr5                        (rule 49)

	'!'            shift, and enter state 48
	'('            shift, and enter state 68
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 98

State 86

	MulOp -> '%' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 87

	MulOp -> '*' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 88

	MulOp -> '/' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 89

	Stmt -> Type Ident . '=' Expr ';'                   (rule 22)

	'='            shift, and enter state 97


State 90

	ListStmt -> Stmt ListStmt .                         (rule 19)

	'}'            reduce using rule 19


State 91

	Block -> '{' ListStmt '}' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'fn'           reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 92

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 43)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	')'            reduce using rule 60
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 95
	ListExpr       goto state 96

State 93

	Stmt -> Ident '=' . Expr ';'                        (rule 23)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 94

State 94

	Stmt -> Ident '=' Expr . ';'                        (rule 23)

	';'            shift, and enter state 114


State 95

	ListExpr -> Expr .                                  (rule 61)
	ListExpr -> Expr . ',' ListExpr                     (rule 62)

	')'            reduce using rule 61
	','            shift, and enter state 113


State 96

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 43)

	')'            shift, and enter state 112


State 97

	Stmt -> Type Ident '=' . Expr ';'                   (rule 22)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 111

State 98

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 99

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 86
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 87
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 88
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 85

State 100

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'||'           reduce using rule 55


State 101

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 83
	','            reduce using rule 53
	'-'            shift, and enter state 84
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 82

State 102

	Expr -> Expr1 '||' Expr .                           (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57


State 103

	Expr6 -> '(' Expr ')' .                             (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 104

	Expr -> '(' ListArg ')' . '=>' Type Block           (rule 58)

	'=>'           shift, and enter state 110


State 105

	If -> 'if' '(' Expr . ')' Block                     (rule 31)
	If -> 'if' '(' Expr . ')' Block 'else' Else         (rule 32)

	')'            shift, and enter state 109


State 106

	Stmt -> 'return' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 107

	Stmt -> 'while' '(' Expr . ')' Block                (rule 28)

	')'            shift, and enter state 108


State 108

	Stmt -> 'while' '(' Expr ')' . Block                (rule 28)

	'{'            shift, and enter state 30

	Block          goto state 119

State 109

	If -> 'if' '(' Expr ')' . Block                     (rule 31)
	If -> 'if' '(' Expr ')' . Block 'else' Else         (rule 32)

	'{'            shift, and enter state 30

	Block          goto state 118

State 110

	Expr -> '(' ListArg ')' '=>' . Type Block           (rule 58)

	'bool'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	Type           goto state 117

State 111

	Stmt -> Type Ident '=' Expr . ';'                   (rule 22)

	';'            shift, and enter state 116


State 112

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 113

	ListExpr -> Expr ',' . ListExpr                     (rule 62)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	')'            reduce using rule 60
	'-'            shift, and enter state 50
	'false'        shift, and enter state 54
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 33
	String         goto state 34
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 95
	ListExpr       goto state 115

State 114

	Stmt -> Ident '=' Expr ';' .                        (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 115

	ListExpr -> Expr ',' ListExpr .                     (rule 62)

	')'            reduce using rule 62


State 116

	Stmt -> Type Ident '=' Expr ';' .                   (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 117

	Type -> Type . '(' ListArgType ')'                  (rule 38)
	Expr -> '(' ListArg ')' '=>' Type . Block           (rule 58)

	'('            shift, and enter state 18
	'{'            shift, and enter state 30

	Block          goto state 121

State 118

	If -> 'if' '(' Expr ')' Block .                     (rule 31)
	If -> 'if' '(' Expr ')' Block . 'else' Else         (rule 32)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'else'         shift, and enter state 120
	'false'        reduce using rule 31
	'fn'           reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 119

	Stmt -> 'while' '(' Expr ')' Block .                (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'fn'           reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 120

	If -> 'if' '(' Expr ')' Block 'else' . Else         (rule 32)

	'if'           shift, and enter state 55
	'{'            shift, and enter state 30

	Block          goto state 122
	If             goto state 123
	Else           goto state 124

State 121

	Expr -> '(' ListArg ')' '=>' Type Block .           (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58


State 122

	Else -> Block .                                     (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'fn'           reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 123

	Else -> If .                                        (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'false'        reduce using rule 34
	'fn'           reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 124

	If -> 'if' '(' Expr ')' Block 'else' Else .         (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'fn'           reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 74
Number of terminals: 39
Number of non-terminals: 28
Number of states: 125
