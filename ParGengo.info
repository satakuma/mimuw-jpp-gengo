-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParGengo.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type Block   (5)
	TopDef -> 'gn' Ident '(' ListArg ')' '->' Type Block   (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	Arg -> Type '&' Ident                              (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ListStmt                          (16)
	Stmt -> ';'                                        (17)
	Stmt -> Block                                      (18)
	Stmt -> Type Ident '=' Expr ';'                    (19)
	Stmt -> Ident '=' Expr ';'                         (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'yield' Expr ';'                           (22)
	Stmt -> 'break' ';'                                (23)
	Stmt -> 'continue' ';'                             (24)
	Stmt -> If                                         (25)
	Stmt -> 'while' '(' Expr ')' Block                 (26)
	Stmt -> 'for' Ident 'in' '(' Expr ')' Block        (27)
	Stmt -> Expr ';'                                   (28)
	Stmt -> TopDef                                     (29)
	If -> 'if' '(' Expr ')' Block                      (30)
	If -> 'if' '(' Expr ')' Block 'else' Else          (31)
	Else -> Block                                      (32)
	Else -> If                                         (33)
	Type -> 'int'                                      (34)
	Type -> 'string'                                   (35)
	Type -> 'bool'                                     (36)
	Type -> '@' '(' Type ')'                           (37)
	Expr6 -> Ident                                     (38)
	Expr6 -> Integer                                   (39)
	Expr6 -> 'true'                                    (40)
	Expr6 -> 'false'                                   (41)
	Expr6 -> Ident '(' ListExpr ')'                    (42)
	Expr6 -> String                                    (43)
	Expr6 -> '(' Expr ')'                              (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> '!' Expr6                                 (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '&&' Expr1                          (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 '||' Expr                            (56)
	Expr -> Expr1                                      (57)
	ListExpr ->                                        (58)
	ListExpr -> Expr                                   (59)
	ListExpr -> Expr ',' ListExpr                      (60)
	AddOp -> '+'                                       (61)
	AddOp -> '-'                                       (62)
	MulOp -> '*'                                       (63)
	MulOp -> '/'                                       (64)
	MulOp -> '%'                                       (65)
	RelOp -> '<'                                       (66)
	RelOp -> '<='                                      (67)
	RelOp -> '>'                                       (68)
	RelOp -> '>='                                      (69)
	RelOp -> '=='                                      (70)
	RelOp -> '!='                                      (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'@'            { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'break'        { PT _ (TS _ 23) }
	'continue'     { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'fn'           { PT _ (TS _ 27) }
	'for'          { PT _ (TS _ 28) }
	'gn'           { PT _ (TS _ 29) }
	'if'           { PT _ (TS _ 30) }
	'in'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'return'       { PT _ (TS _ 33) }
	'string'       { PT _ (TS _ 34) }
	'true'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'yield'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'||'           { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	Arg             rules 9, 10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	If              rules 30, 31
	Else            rules 32, 33
	Type            rules 34, 35, 36, 37
	Expr6           rules 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	ListExpr        rules 58, 59, 60
	AddOp           rules 61, 62
	MulOp           rules 63, 64, 65
	RelOp           rules 66, 67, 68, 69, 70, 71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'fn'           shift, and enter state 6
	'gn'           shift, and enter state 7

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'fn'           shift, and enter state 6
	'gn'           shift, and enter state 7
	%eof           reduce using rule 7

	TopDef         goto state 4
	ListTopDef     goto state 10

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> 'fn' . Ident '(' ListArg ')' '->' Type Block    (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 9

State 7

	TopDef -> 'gn' . Ident '(' ListArg ')' '->' Type Block    (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 8

State 8

	TopDef -> 'gn' Ident . '(' ListArg ')' '->' Type Block    (rule 6)

	'('            shift, and enter state 12


State 9

	TopDef -> 'fn' Ident . '(' ListArg ')' '->' Type Block    (rule 5)

	'('            shift, and enter state 11


State 10

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 11

	TopDef -> 'fn' Ident '(' . ListArg ')' '->' Type Block    (rule 5)

	')'            reduce using rule 11
	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'int'          shift, and enter state 18
	'string'       shift, and enter state 19

	Arg            goto state 13
	ListArg        goto state 20
	Type           goto state 15

State 12

	TopDef -> 'gn' Ident '(' . ListArg ')' '->' Type Block    (rule 6)

	')'            reduce using rule 11
	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'int'          shift, and enter state 18
	'string'       shift, and enter state 19

	Arg            goto state 13
	ListArg        goto state 14
	Type           goto state 15

State 13

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 26


State 14

	TopDef -> 'gn' Ident '(' ListArg . ')' '->' Type Block    (rule 6)

	')'            shift, and enter state 25


State 15

	Arg -> Type . Ident                                 (rule 9)
	Arg -> Type . '&' Ident                             (rule 10)

	'&'            shift, and enter state 24
	L_Ident        shift, and enter state 2

	Ident          goto state 23

State 16

	Type -> '@' . '(' Type ')'                          (rule 37)

	'('            shift, and enter state 22


State 17

	Type -> 'bool' .                                    (rule 36)

	'&'            reduce using rule 36
	')'            reduce using rule 36
	'{'            reduce using rule 36
	L_Ident        reduce using rule 36


State 18

	Type -> 'int' .                                     (rule 34)

	'&'            reduce using rule 34
	')'            reduce using rule 34
	'{'            reduce using rule 34
	L_Ident        reduce using rule 34


State 19

	Type -> 'string' .                                  (rule 35)

	'&'            reduce using rule 35
	')'            reduce using rule 35
	'{'            reduce using rule 35
	L_Ident        reduce using rule 35


State 20

	TopDef -> 'fn' Ident '(' ListArg . ')' '->' Type Block    (rule 5)

	')'            shift, and enter state 21


State 21

	TopDef -> 'fn' Ident '(' ListArg ')' . '->' Type Block    (rule 5)

	'->'           shift, and enter state 31


State 22

	Type -> '@' '(' . Type ')'                          (rule 37)

	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'int'          shift, and enter state 18
	'string'       shift, and enter state 19

	Type           goto state 30

State 23

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 24

	Arg -> Type '&' . Ident                             (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 29

State 25

	TopDef -> 'gn' Ident '(' ListArg ')' . '->' Type Block    (rule 6)

	'->'           shift, and enter state 28


State 26

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'int'          shift, and enter state 18
	'string'       shift, and enter state 19

	Arg            goto state 13
	ListArg        goto state 27
	Type           goto state 15

State 27

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 28

	TopDef -> 'gn' Ident '(' ListArg ')' '->' . Type Block    (rule 6)

	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'int'          shift, and enter state 18
	'string'       shift, and enter state 19

	Type           goto state 34

State 29

	Arg -> Type '&' Ident .                             (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 30

	Type -> '@' '(' Type . ')'                          (rule 37)

	')'            shift, and enter state 33


State 31

	TopDef -> 'fn' Ident '(' ListArg ')' '->' . Type Block    (rule 5)

	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'int'          shift, and enter state 18
	'string'       shift, and enter state 19

	Type           goto state 32

State 32

	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type . Block    (rule 5)

	'{'            shift, and enter state 36

	Block          goto state 37

State 33

	Type -> '@' '(' Type ')' .                          (rule 37)

	'&'            reduce using rule 37
	')'            reduce using rule 37
	'{'            reduce using rule 37
	L_Ident        reduce using rule 37


State 34

	TopDef -> 'gn' Ident '(' ListArg ')' '->' Type . Block    (rule 6)

	'{'            shift, and enter state 36

	Block          goto state 35

State 35

	TopDef -> 'gn' Ident '(' ListArg ')' '->' Type Block .    (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'@'            reduce using rule 6
	'bool'         reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'false'        reduce using rule 6
	'fn'           reduce using rule 6
	'for'          reduce using rule 6
	'gn'           reduce using rule 6
	'if'           reduce using rule 6
	'int'          reduce using rule 6
	'return'       reduce using rule 6
	'string'       reduce using rule 6
	'true'         reduce using rule 6
	'while'        reduce using rule 6
	'yield'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 36

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'break'        shift, and enter state 58
	'continue'     shift, and enter state 59
	'false'        shift, and enter state 60
	'fn'           shift, and enter state 6
	'for'          shift, and enter state 61
	'gn'           shift, and enter state 7
	'if'           shift, and enter state 62
	'int'          shift, and enter state 18
	'return'       shift, and enter state 63
	'string'       shift, and enter state 19
	'true'         shift, and enter state 64
	'while'        shift, and enter state 65
	'yield'        shift, and enter state 66
	'{'            shift, and enter state 36
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	TopDef         goto state 41
	Block          goto state 42
	ListStmt       goto state 43
	Stmt           goto state 44
	If             goto state 45
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 37

	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'@'            reduce using rule 5
	'bool'         reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'fn'           reduce using rule 5
	'for'          reduce using rule 5
	'gn'           reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'yield'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 38

	Stmt -> Ident . '=' Expr ';'                        (rule 20)
	Expr6 -> Ident .                                    (rule 38)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 100
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            shift, and enter state 101
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 39

	Expr6 -> Integer .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 40

	Expr6 -> String .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 41

	Stmt -> TopDef .                                    (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'@'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'fn'           reduce using rule 29
	'for'          reduce using rule 29
	'gn'           reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'yield'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 42

	Stmt -> Block .                                     (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'@'            reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'fn'           reduce using rule 18
	'for'          reduce using rule 18
	'gn'           reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'yield'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 43

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 99


State 44

	ListStmt -> Stmt . ListStmt                         (rule 16)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'@'            shift, and enter state 16
	'bool'         shift, and enter state 17
	'break'        shift, and enter state 58
	'continue'     shift, and enter state 59
	'false'        shift, and enter state 60
	'fn'           shift, and enter state 6
	'for'          shift, and enter state 61
	'gn'           shift, and enter state 7
	'if'           shift, and enter state 62
	'int'          shift, and enter state 18
	'return'       shift, and enter state 63
	'string'       shift, and enter state 19
	'true'         shift, and enter state 64
	'while'        shift, and enter state 65
	'yield'        shift, and enter state 66
	'{'            shift, and enter state 36
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	TopDef         goto state 41
	Block          goto state 42
	ListStmt       goto state 98
	Stmt           goto state 44
	If             goto state 45
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 45

	Stmt -> If .                                        (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'@'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'for'          reduce using rule 25
	'gn'           reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'yield'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 46

	Stmt -> Type . Ident '=' Expr ';'                   (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 97

State 47

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 48

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 49

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 94
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 95
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 96
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 93

State 50

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 91
	','            reduce using rule 53
	'-'            shift, and enter state 92
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 90

State 51

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 83
	'&&'           shift, and enter state 84
	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'=='           shift, and enter state 87
	'>'            shift, and enter state 88
	'>='           shift, and enter state 89
	'||'           reduce using rule 55

	RelOp          goto state 82

State 52

	Expr -> Expr1 . '||' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'||'           shift, and enter state 81


State 53

	Stmt -> Expr . ';'                                  (rule 28)

	';'            shift, and enter state 80


State 54

	Expr5 -> '!' . Expr6                                (rule 46)

	'('            shift, and enter state 55
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 79

State 55

	Expr6 -> '(' . Expr ')'                             (rule 44)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 78

State 56

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 55
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 77

State 57

	Stmt -> ';' .                                       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'@'            reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'fn'           reduce using rule 17
	'for'          reduce using rule 17
	'gn'           reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'yield'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 58

	Stmt -> 'break' . ';'                               (rule 23)

	';'            shift, and enter state 76


State 59

	Stmt -> 'continue' . ';'                            (rule 24)

	';'            shift, and enter state 75


State 60

	Expr6 -> 'false' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 61

	Stmt -> 'for' . Ident 'in' '(' Expr ')' Block       (rule 27)

	L_Ident        shift, and enter state 2

	Ident          goto state 74

State 62

	If -> 'if' . '(' Expr ')' Block                     (rule 30)
	If -> 'if' . '(' Expr ')' Block 'else' Else         (rule 31)

	'('            shift, and enter state 73


State 63

	Stmt -> 'return' . Expr ';'                         (rule 21)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 72

State 64

	Expr6 -> 'true' .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 65

	Stmt -> 'while' . '(' Expr ')' Block                (rule 26)

	'('            shift, and enter state 71


State 66

	Stmt -> 'yield' . Expr ';'                          (rule 22)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 70

State 67

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 68

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 69

	Expr6 -> Ident .                                    (rule 38)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 100
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 70

	Stmt -> 'yield' Expr . ';'                          (rule 22)

	';'            shift, and enter state 116


State 71

	Stmt -> 'while' '(' . Expr ')' Block                (rule 26)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 115

State 72

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 114


State 73

	If -> 'if' '(' . Expr ')' Block                     (rule 30)
	If -> 'if' '(' . Expr ')' Block 'else' Else         (rule 31)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 113

State 74

	Stmt -> 'for' Ident . 'in' '(' Expr ')' Block       (rule 27)

	'in'           shift, and enter state 112


State 75

	Stmt -> 'continue' ';' .                            (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'@'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'for'          reduce using rule 24
	'gn'           reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'yield'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 76

	Stmt -> 'break' ';' .                               (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'@'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'for'          reduce using rule 23
	'gn'           reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 77

	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 78

	Expr6 -> '(' Expr . ')'                             (rule 44)

	')'            shift, and enter state 111


State 79

	Expr5 -> '!' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 80

	Stmt -> Expr ';' .                                  (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'@'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'fn'           reduce using rule 28
	'for'          reduce using rule 28
	'gn'           reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'yield'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 81

	Expr -> Expr1 '||' . Expr                           (rule 56)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 110

State 82

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 109

State 83

	RelOp -> '!=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 84

	Expr1 -> Expr2 '&&' . Expr1                         (rule 54)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 108

State 85

	RelOp -> '<' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 86

	RelOp -> '<=' .                                     (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 87

	RelOp -> '==' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 88

	RelOp -> '>' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 89

	RelOp -> '>=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 90

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 107

State 91

	AddOp -> '+' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 92

	AddOp -> '-' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 93

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 106

State 94

	MulOp -> '%' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 95

	MulOp -> '*' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 96

	MulOp -> '/' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 97

	Stmt -> Type Ident . '=' Expr ';'                   (rule 19)

	'='            shift, and enter state 105


State 98

	ListStmt -> Stmt ListStmt .                         (rule 16)

	'}'            reduce using rule 16


State 99

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'@'            reduce using rule 14
	'bool'         reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'fn'           reduce using rule 14
	'for'          reduce using rule 14
	'gn'           reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'yield'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 100

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 42)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 58
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 103
	ListExpr       goto state 104

State 101

	Stmt -> Ident '=' . Expr ';'                        (rule 20)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 102

State 102

	Stmt -> Ident '=' Expr . ';'                        (rule 20)

	';'            shift, and enter state 123


State 103

	ListExpr -> Expr .                                  (rule 59)
	ListExpr -> Expr . ',' ListExpr                     (rule 60)

	')'            reduce using rule 59
	','            shift, and enter state 122


State 104

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 42)

	')'            shift, and enter state 121


State 105

	Stmt -> Type Ident '=' . Expr ';'                   (rule 19)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 120

State 106

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 107

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 94
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 95
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 96
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 93

State 108

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'||'           reduce using rule 54


State 109

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 91
	','            reduce using rule 52
	'-'            shift, and enter state 92
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 90

State 110

	Expr -> Expr1 '||' Expr .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56


State 111

	Expr6 -> '(' Expr ')' .                             (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 112

	Stmt -> 'for' Ident 'in' . '(' Expr ')' Block       (rule 27)

	'('            shift, and enter state 119


State 113

	If -> 'if' '(' Expr . ')' Block                     (rule 30)
	If -> 'if' '(' Expr . ')' Block 'else' Else         (rule 31)

	')'            shift, and enter state 118


State 114

	Stmt -> 'return' Expr ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'@'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'fn'           reduce using rule 21
	'for'          reduce using rule 21
	'gn'           reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 115

	Stmt -> 'while' '(' Expr . ')' Block                (rule 26)

	')'            shift, and enter state 117


State 116

	Stmt -> 'yield' Expr ';' .                          (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'@'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'for'          reduce using rule 22
	'gn'           reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 117

	Stmt -> 'while' '(' Expr ')' . Block                (rule 26)

	'{'            shift, and enter state 36

	Block          goto state 128

State 118

	If -> 'if' '(' Expr ')' . Block                     (rule 30)
	If -> 'if' '(' Expr ')' . Block 'else' Else         (rule 31)

	'{'            shift, and enter state 36

	Block          goto state 127

State 119

	Stmt -> 'for' Ident 'in' '(' . Expr ')' Block       (rule 27)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 126

State 120

	Stmt -> Type Ident '=' Expr . ';'                   (rule 19)

	';'            shift, and enter state 125


State 121

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 122

	ListExpr -> Expr ',' . ListExpr                     (rule 60)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 58
	'-'            shift, and enter state 56
	'false'        shift, and enter state 60
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 69
	Integer        goto state 39
	String         goto state 40
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 103
	ListExpr       goto state 124

State 123

	Stmt -> Ident '=' Expr ';' .                        (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'@'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'fn'           reduce using rule 20
	'for'          reduce using rule 20
	'gn'           reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'yield'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 124

	ListExpr -> Expr ',' ListExpr .                     (rule 60)

	')'            reduce using rule 60


State 125

	Stmt -> Type Ident '=' Expr ';' .                   (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'@'            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'fn'           reduce using rule 19
	'for'          reduce using rule 19
	'gn'           reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'yield'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 126

	Stmt -> 'for' Ident 'in' '(' Expr . ')' Block       (rule 27)

	')'            shift, and enter state 130


State 127

	If -> 'if' '(' Expr ')' Block .                     (rule 30)
	If -> 'if' '(' Expr ')' Block . 'else' Else         (rule 31)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'@'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'else'         shift, and enter state 129
	'false'        reduce using rule 30
	'fn'           reduce using rule 30
	'for'          reduce using rule 30
	'gn'           reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'yield'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 128

	Stmt -> 'while' '(' Expr ')' Block .                (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'@'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'for'          reduce using rule 26
	'gn'           reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'yield'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 129

	If -> 'if' '(' Expr ')' Block 'else' . Else         (rule 31)

	'if'           shift, and enter state 62
	'{'            shift, and enter state 36

	Block          goto state 132
	If             goto state 133
	Else           goto state 134

State 130

	Stmt -> 'for' Ident 'in' '(' Expr ')' . Block       (rule 27)

	'{'            shift, and enter state 36

	Block          goto state 131

State 131

	Stmt -> 'for' Ident 'in' '(' Expr ')' Block .       (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'@'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'fn'           reduce using rule 27
	'for'          reduce using rule 27
	'gn'           reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'yield'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 132

	Else -> Block .                                     (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'@'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'fn'           reduce using rule 32
	'for'          reduce using rule 32
	'gn'           reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'yield'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 133

	Else -> If .                                        (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'@'            reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'fn'           reduce using rule 33
	'for'          reduce using rule 33
	'gn'           reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'yield'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 134

	If -> 'if' '(' Expr ')' Block 'else' Else .         (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'@'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'false'        reduce using rule 31
	'fn'           reduce using rule 31
	'for'          reduce using rule 31
	'gn'           reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'yield'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 43
Number of non-terminals: 26
Number of states: 135
