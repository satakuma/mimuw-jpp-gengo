-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParGengo.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type Block   (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type '&' Ident                              (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type Ident '=' Expr ';'                    (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> 'return' Expr ';'                          (20)
	Stmt -> 'break' ';'                                (21)
	Stmt -> 'continue' ';'                             (22)
	Stmt -> If                                         (23)
	Stmt -> 'while' '(' Expr ')' Block                 (24)
	Stmt -> Expr ';'                                   (25)
	Stmt -> TopDef                                     (26)
	If -> 'if' '(' Expr ')' Block                      (27)
	If -> 'if' '(' Expr ')' Block 'else' Else          (28)
	Else -> Block                                      (29)
	Else -> If                                         (30)
	Type -> 'int'                                      (31)
	Type -> 'string'                                   (32)
	Type -> 'bool'                                     (33)
	Expr6 -> Ident                                     (34)
	Expr6 -> Integer                                   (35)
	Expr6 -> 'true'                                    (36)
	Expr6 -> 'false'                                   (37)
	Expr6 -> Ident '(' ListExpr ')'                    (38)
	Expr6 -> String                                    (39)
	Expr6 -> '(' Expr ')'                              (40)
	Expr5 -> '-' Expr6                                 (41)
	Expr5 -> '!' Expr6                                 (42)
	Expr5 -> Expr6                                     (43)
	Expr4 -> Expr4 MulOp Expr5                         (44)
	Expr4 -> Expr5                                     (45)
	Expr3 -> Expr3 AddOp Expr4                         (46)
	Expr3 -> Expr4                                     (47)
	Expr2 -> Expr2 RelOp Expr3                         (48)
	Expr2 -> Expr3                                     (49)
	Expr1 -> Expr2 '&&' Expr1                          (50)
	Expr1 -> Expr2                                     (51)
	Expr -> Expr1 '||' Expr                            (52)
	Expr -> Expr1                                      (53)
	ListExpr ->                                        (54)
	ListExpr -> Expr                                   (55)
	ListExpr -> Expr ',' ListExpr                      (56)
	AddOp -> '+'                                       (57)
	AddOp -> '-'                                       (58)
	MulOp -> '*'                                       (59)
	MulOp -> '/'                                       (60)
	MulOp -> '%'                                       (61)
	RelOp -> '<'                                       (62)
	RelOp -> '<='                                      (63)
	RelOp -> '>'                                       (64)
	RelOp -> '>='                                      (65)
	RelOp -> '=='                                      (66)
	RelOp -> '!='                                      (67)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'bool'         { PT _ (TS _ 21) }
	'break'        { PT _ (TS _ 22) }
	'continue'     { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'false'        { PT _ (TS _ 25) }
	'fn'           { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'int'          { PT _ (TS _ 28) }
	'return'       { PT _ (TS _ 29) }
	'string'       { PT _ (TS _ 30) }
	'true'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	If              rules 27, 28
	Else            rules 29, 30
	Type            rules 31, 32, 33
	Expr6           rules 34, 35, 36, 37, 38, 39, 40
	Expr5           rules 41, 42, 43
	Expr4           rules 44, 45
	Expr3           rules 46, 47
	Expr2           rules 48, 49
	Expr1           rules 50, 51
	Expr            rules 52, 53
	ListExpr        rules 54, 55, 56
	AddOp           rules 57, 58
	MulOp           rules 59, 60, 61
	RelOp           rules 62, 63, 64, 65, 66, 67

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'fn'           shift, and enter state 6

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'fn'           shift, and enter state 6
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 8

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> 'fn' . Ident '(' ListArg ')' '->' Type Block    (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 7

State 7

	TopDef -> 'fn' Ident . '(' ListArg ')' '->' Type Block    (rule 5)

	'('            shift, and enter state 9


State 8

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 9

	TopDef -> 'fn' Ident '(' . ListArg ')' '->' Type Block    (rule 5)

	')'            reduce using rule 10
	'bool'         shift, and enter state 13
	'int'          shift, and enter state 14
	'string'       shift, and enter state 15

	Arg            goto state 10
	ListArg        goto state 11
	Type           goto state 12

State 10

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 19


State 11

	TopDef -> 'fn' Ident '(' ListArg . ')' '->' Type Block    (rule 5)

	')'            shift, and enter state 18


State 12

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . '&' Ident                             (rule 9)

	'&'            shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 13

	Type -> 'bool' .                                    (rule 33)

	'&'            reduce using rule 33
	'{'            reduce using rule 33
	L_Ident        reduce using rule 33


State 14

	Type -> 'int' .                                     (rule 31)

	'&'            reduce using rule 31
	'{'            reduce using rule 31
	L_Ident        reduce using rule 31


State 15

	Type -> 'string' .                                  (rule 32)

	'&'            reduce using rule 32
	'{'            reduce using rule 32
	L_Ident        reduce using rule 32


State 16

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 17

	Arg -> Type '&' . Ident                             (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 22

State 18

	TopDef -> 'fn' Ident '(' ListArg ')' . '->' Type Block    (rule 5)

	'->'           shift, and enter state 21


State 19

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'bool'         shift, and enter state 13
	'int'          shift, and enter state 14
	'string'       shift, and enter state 15

	Arg            goto state 10
	ListArg        goto state 20
	Type           goto state 12

State 20

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 21

	TopDef -> 'fn' Ident '(' ListArg ')' '->' . Type Block    (rule 5)

	'bool'         shift, and enter state 13
	'int'          shift, and enter state 14
	'string'       shift, and enter state 15

	Type           goto state 23

State 22

	Arg -> Type '&' Ident .                             (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 23

	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type . Block    (rule 5)

	'{'            shift, and enter state 25

	Block          goto state 24

State 24

	TopDef -> 'fn' Ident '(' ListArg ')' '->' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'bool'         reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'fn'           reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 25

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	';'            shift, and enter state 45
	'bool'         shift, and enter state 13
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'false'        shift, and enter state 48
	'fn'           shift, and enter state 6
	'if'           shift, and enter state 49
	'int'          shift, and enter state 14
	'return'       shift, and enter state 50
	'string'       shift, and enter state 15
	'true'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 25
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	TopDef         goto state 29
	Block          goto state 30
	ListStmt       goto state 31
	Stmt           goto state 32
	If             goto state 33
	Type           goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 41

State 26

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Expr6 -> Ident .                                    (rule 34)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 38)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            shift, and enter state 84
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            shift, and enter state 85
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 27

	Expr6 -> Integer .                                  (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 28

	Expr6 -> String .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 29

	Stmt -> TopDef .                                    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 30

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'fn'           reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 31

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 83


State 32

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	';'            shift, and enter state 45
	'bool'         shift, and enter state 13
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'false'        shift, and enter state 48
	'fn'           shift, and enter state 6
	'if'           shift, and enter state 49
	'int'          shift, and enter state 14
	'return'       shift, and enter state 50
	'string'       shift, and enter state 15
	'true'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 25
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	TopDef         goto state 29
	Block          goto state 30
	ListStmt       goto state 82
	Stmt           goto state 32
	If             goto state 33
	Type           goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 41

State 33

	Stmt -> If .                                        (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 34

	Stmt -> Type . Ident '=' Expr ';'                   (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 81

State 35

	Expr5 -> Expr6 .                                    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 36

	Expr4 -> Expr5 .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 37

	Expr4 -> Expr4 . MulOp Expr5                        (rule 44)
	Expr3 -> Expr4 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            shift, and enter state 78
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            shift, and enter state 79
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            shift, and enter state 80
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47

	MulOp          goto state 77

State 38

	Expr3 -> Expr3 . AddOp Expr4                        (rule 46)
	Expr2 -> Expr3 .                                    (rule 49)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 75
	','            reduce using rule 49
	'-'            shift, and enter state 76
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49

	AddOp          goto state 74

State 39

	Expr2 -> Expr2 . RelOp Expr3                        (rule 48)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 50)
	Expr1 -> Expr2 .                                    (rule 51)

	'!='           shift, and enter state 67
	'&&'           shift, and enter state 68
	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'<'            shift, and enter state 69
	'<='           shift, and enter state 70
	'=='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           reduce using rule 51

	RelOp          goto state 66

State 40

	Expr -> Expr1 . '||' Expr                           (rule 52)
	Expr -> Expr1 .                                     (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'||'           shift, and enter state 65


State 41

	Stmt -> Expr . ';'                                  (rule 25)

	';'            shift, and enter state 64


State 42

	Expr5 -> '!' . Expr6                                (rule 42)

	'('            shift, and enter state 43
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 63

State 43

	Expr6 -> '(' . Expr ')'                             (rule 40)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 62

State 44

	Expr5 -> '-' . Expr6                                (rule 41)

	'('            shift, and enter state 43
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 61

State 45

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'fn'           reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 46

	Stmt -> 'break' . ';'                               (rule 21)

	';'            shift, and enter state 60


State 47

	Stmt -> 'continue' . ';'                            (rule 22)

	';'            shift, and enter state 59


State 48

	Expr6 -> 'false' .                                  (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 49

	If -> 'if' . '(' Expr ')' Block                     (rule 27)
	If -> 'if' . '(' Expr ')' Block 'else' Else         (rule 28)

	'('            shift, and enter state 58


State 50

	Stmt -> 'return' . Expr ';'                         (rule 20)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 57

State 51

	Expr6 -> 'true' .                                   (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 52

	Stmt -> 'while' . '(' Expr ')' Block                (rule 24)

	'('            shift, and enter state 55


State 53

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 54

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 55

	Stmt -> 'while' '(' . Expr ')' Block                (rule 24)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 98

State 56

	Expr6 -> Ident .                                    (rule 34)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 38)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            shift, and enter state 84
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 57

	Stmt -> 'return' Expr . ';'                         (rule 20)

	';'            shift, and enter state 97


State 58

	If -> 'if' '(' . Expr ')' Block                     (rule 27)
	If -> 'if' '(' . Expr ')' Block 'else' Else         (rule 28)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 96

State 59

	Stmt -> 'continue' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 60

	Stmt -> 'break' ';' .                               (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'fn'           reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 61

	Expr5 -> '-' Expr6 .                                (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 62

	Expr6 -> '(' Expr . ')'                             (rule 40)

	')'            shift, and enter state 95


State 63

	Expr5 -> '!' Expr6 .                                (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 64

	Stmt -> Expr ';' .                                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 65

	Expr -> Expr1 '||' . Expr                           (rule 52)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 94

State 66

	Expr2 -> Expr2 RelOp . Expr3                        (rule 48)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 93

State 67

	RelOp -> '!=' .                                     (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 68

	Expr1 -> Expr2 '&&' . Expr1                         (rule 50)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 92

State 69

	RelOp -> '<' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 70

	RelOp -> '<=' .                                     (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 71

	RelOp -> '==' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 72

	RelOp -> '>' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 73

	RelOp -> '>=' .                                     (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 74

	Expr3 -> Expr3 AddOp . Expr4                        (rule 46)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 91

State 75

	AddOp -> '+' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 76

	AddOp -> '-' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 77

	Expr4 -> Expr4 MulOp . Expr5                        (rule 44)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 90

State 78

	MulOp -> '%' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 79

	MulOp -> '*' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 80

	MulOp -> '/' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 81

	Stmt -> Type Ident . '=' Expr ';'                   (rule 18)

	'='            shift, and enter state 89


State 82

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 83

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'bool'         reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'fn'           reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 84

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 38)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	')'            reduce using rule 54
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 87
	ListExpr       goto state 88

State 85

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 86

State 86

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 104


State 87

	ListExpr -> Expr .                                  (rule 55)
	ListExpr -> Expr . ',' ListExpr                     (rule 56)

	')'            reduce using rule 55
	','            shift, and enter state 103


State 88

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 38)

	')'            shift, and enter state 102


State 89

	Stmt -> Type Ident '=' . Expr ';'                   (rule 18)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 101

State 90

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 91

	Expr4 -> Expr4 . MulOp Expr5                        (rule 44)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 46)

	'!='           reduce using rule 46
	'%'            shift, and enter state 78
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            shift, and enter state 79
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            shift, and enter state 80
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46

	MulOp          goto state 77

State 92

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'||'           reduce using rule 50


State 93

	Expr3 -> Expr3 . AddOp Expr4                        (rule 46)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 48)

	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 75
	','            reduce using rule 48
	'-'            shift, and enter state 76
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48

	AddOp          goto state 74

State 94

	Expr -> Expr1 '||' Expr .                           (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52


State 95

	Expr6 -> '(' Expr ')' .                             (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 96

	If -> 'if' '(' Expr . ')' Block                     (rule 27)
	If -> 'if' '(' Expr . ')' Block 'else' Else         (rule 28)

	')'            shift, and enter state 100


State 97

	Stmt -> 'return' Expr ';' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'fn'           reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 98

	Stmt -> 'while' '(' Expr . ')' Block                (rule 24)

	')'            shift, and enter state 99


State 99

	Stmt -> 'while' '(' Expr ')' . Block                (rule 24)

	'{'            shift, and enter state 25

	Block          goto state 108

State 100

	If -> 'if' '(' Expr ')' . Block                     (rule 27)
	If -> 'if' '(' Expr ')' . Block 'else' Else         (rule 28)

	'{'            shift, and enter state 25

	Block          goto state 107

State 101

	Stmt -> Type Ident '=' Expr . ';'                   (rule 18)

	';'            shift, and enter state 106


State 102

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 103

	ListExpr -> Expr ',' . ListExpr                     (rule 56)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	')'            reduce using rule 54
	'-'            shift, and enter state 44
	'false'        shift, and enter state 48
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 87
	ListExpr       goto state 105

State 104

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'fn'           reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 105

	ListExpr -> Expr ',' ListExpr .                     (rule 56)

	')'            reduce using rule 56


State 106

	Stmt -> Type Ident '=' Expr ';' .                   (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'fn'           reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 107

	If -> 'if' '(' Expr ')' Block .                     (rule 27)
	If -> 'if' '(' Expr ')' Block . 'else' Else         (rule 28)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'else'         shift, and enter state 109
	'false'        reduce using rule 27
	'fn'           reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 108

	Stmt -> 'while' '(' Expr ')' Block .                (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 109

	If -> 'if' '(' Expr ')' Block 'else' . Else         (rule 28)

	'if'           shift, and enter state 49
	'{'            shift, and enter state 25

	Block          goto state 110
	If             goto state 111
	Else           goto state 112

State 110

	Else -> Block .                                     (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'fn'           reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 111

	Else -> If .                                        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'fn'           reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 112

	If -> 'if' '(' Expr ')' Block 'else' Else .         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'fn'           reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 68
Number of terminals: 38
Number of non-terminals: 26
Number of states: 113
